type Delegation = record {
  pubkey : blob;
  targets : opt vec principal;
  expiration : nat64;
};
type LoginDetails = record { user_canister_pubkey : blob; expiration : nat64 };
type PrepareLoginDetails = record {
  callback_url : text;
  message : text;
  nonce : text;
};
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : principal; Err : text };
type Result_2 = variant { Ok : SignedDelegation; Err : text };
type Result_3 = variant { Ok : LoginDetails; Err : text };
type Result_4 = variant { Ok : PrepareLoginDetails; Err : text };
type RuntimeFeature = variant { IncludeUriInSeed };
type SettingsInput = record {
  runtime_features : opt vec RuntimeFeature;
  app_url : text;
  salt : text;
  session_expires_in : opt nat64;
  callback_url : text;
  targets : opt vec text;
  chain_id : opt text;
  sign_in_expires_in : opt nat64;
};
type SignedDelegation = record { signature : blob; delegation : Delegation };
service : (SettingsInput) -> {
  __get_candid_interface_tmp_hack : () -> (text) query;
  get_account_id : (principal) -> (Result) query;
  get_caller_address : () -> (Result) query;
  get_principal : (text) -> (Result_1) query;
  icts_name : () -> (text) query;
  icts_version : () -> (text) query;
  siwn_get_delegation : (text, blob, nat64) -> (Result_2) query;
  siwn_login : (text, text, text, blob, text) -> (Result_3);
  siwn_prepare_login : (text) -> (Result_4);
}